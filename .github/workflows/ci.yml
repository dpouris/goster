name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build_test_lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # minimal permissions for checking out code

    steps:
      - name: Check out code
        uses: actions/checkout@v4
    
      - name: Ensure go.mod exists
        run: |
          if [ ! -f go.mod ]; then
            echo "go.mod not found, initializing module"
            go mod init github.com/dpouris/goster
          fi
    
      - name: Tidy modules
        run: go mod tidy

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true
    
      - name: Create mod cache directory
        run: mkdir -p /home/runner/go/pkg/mod

      - name: Cache modules
        uses: actions/cache@v3
        with:
           path: /home/runner/go/pkg/mod
           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
           restore-keys: |
            ${{ runner.os }}-go-
          
      - name: Build (compile)
        run: go build ./...
    
      - name: Run tests with coverage
        run: go test -v ./... -coverprofile=coverage.out
    
        
      - name: Lint code
        id: lint_code
        uses: golangci/golangci-lint-action@v3
        with:
            version: latest

      - name: Save lint output
        env:
          LINT_OUTPUT: ${{steps.lint_code.outputs}}
        run: echo "$LINT_OUTPUT" > lint.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      - name: Upload lint report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint.out